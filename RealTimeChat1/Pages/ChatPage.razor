@page "/Chat"
@using RealTimeChat1.Shared

@{
}

<!doctype html>
<html lang="ru">
<head>
    <!-- Обязательные метатеги -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/Pages/ChatPage.razor.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

</head>
<body >

    Theme
    <select @onchange="ChangingTheme" style="margin: 1rem ">
        @foreach (var theme in themes)
        {
            <option selected="@IsSelectedTheme(theme)" value="@theme">@theme</option>
        }
    </select>
    <main class="content @GetCssClass()">
        <div class="container p-0">


            <h1 class="h3 mb-3">Messenger-PegionMail</h1>

            <div class="card @GetCssClass()">
                <div class="row g-0">

                    <!--Компонент SideMenu-->
                    <SideMenu />

                    <!--Компонент блока с чатом-->
                    <ChatBlock />

                </div>
            </div>
            <style>
                body {
                    margin-top: 20px;
                }

                .dark-mode {
                    background: #2d2d2d;
                    color: grey;
                    highlight: #393939;
                    highlight-2: #414648;
                    link: #3ca4ff;
                }

                li {
                    list-style: none;
                }

                .chat-online {
                    color: #34ce57
                }

                .chat-offline {
                    color: #e4606d
                }

                .chat-messages {
                    display: flex;
                    flex-direction: column;
                    min-height: 600px;
                    max-height: 600px;
                    overflow-y: scroll;
                }

                .chat-message-left,
                .chat-message-right {
                    display: flex;
                    flex-shrink: 0
                }

                .chat-message-left {
                    margin-right: auto
                }

                .chat-message-right {
                    flex-direction: row-reverse;
                    margin-left: auto
                }

                .py-3 {
                    padding-top: 1rem !important;
                    padding-bottom: 1rem !important;
                }

                .px-4 {
                    padding-right: 1.5rem !important;
                    padding-left: 1.5rem !important;
                }

                .flex-grow-0 {
                    flex-grow: 0 !important;
                }

                .border-top {
                    border-top: 1px solid #dee2e6 !important;
                }
            </style>

        </div>
    </main>
</body>
</html>


@code {
    private static string selectedTheme = "Light";
    private List<string> themes = new List<string> { "Light", "Dark" };
    public static string GetCssClass()
    {
        if (selectedTheme == "Light")
        {
            return string.Empty;
        }
        else
        {
            return "dark-mode";
        }
    }

    private bool IsSelectedTheme(string theme)
    {
        return theme == selectedTheme;
    }

    private void ChangingTheme(ChangeEventArgs e)
    {
        selectedTheme = e.Value.ToString();
    }
}
